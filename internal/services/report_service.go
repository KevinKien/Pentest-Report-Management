package services

import (
	"time"

	"pentest-report/internal/models"
	"pentest-report/internal/repositories"

)

type ReportService struct {
	ReportRepository *repositories.ReportRepository
}

func NewReportService(reportRepo *repositories.ReportRepository) *ReportService {
	return &ReportService{ReportRepository: reportRepo}
}

// AddReport adds a new report
func (s *ReportService) CreateReport(projectID int, name, author, status string) error {
	report := &models.Report{
		ProjectID: projectID,
		Name:      name,
		Date:      time.Now(),
		Author:    author,
		Status:    status,
	}
	return s.ReportRepository.CreateReport(report)
}

// GetReportByID retrieves a report by its ID from the database
func (s *ReportService) GetReportDetailByID(reportID int) (*models.ReportDetail, error) {
	return s.ReportRepository.GetReportDetailByID(reportID)
}

func (s *ReportService) DeleteReport(reportID int) error {
    return s.ReportRepository.DeleteReport(reportID)
}

func (s *ReportService) UpdateReport(reportID int, report *models.ReportUpdate) error {
    return s.ReportRepository.UpdateReport(reportID, report)
}

func (s *ReportService) GetRecentReports() ([]models.ReportRecent, error) {
    return s.ReportRepository.GetRecentReports()
}