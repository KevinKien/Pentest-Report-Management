package services

import (
	"strings"
	"time"

	"pentest-report/internal/models"
	"pentest-report/internal/repositories"

)

type FindingService struct {
	FindingRepository *repositories.FindingRepository
}

func NewFindingService(findingRepo *repositories.FindingRepository) *FindingService {
    return &FindingService{FindingRepository: findingRepo}
}

func (s *FindingService) AddFinding(finding *models.Finding) error {
    finding.CreatedAt = time.Now()
    finding.ImageURLs = strings.Join(finding.ImageURLsArray, ",")

    return s.FindingRepository.AddFinding(finding)
}

func (s *FindingService) GetFindingsByReportID(reportID int) ([]models.Finding, error) {
    return s.FindingRepository.GetFindingsByReportID(reportID)
}

// GetAllFindingsForReport trả về tất cả các findings cho một report
func (s *FindingService) GetAllFindingsForReport(reportID int) ([]models.Finding, error) {
    // Gọi phương thức GetAllFindingsForReport từ repository
    findings, err := s.FindingRepository.GetAllFindingsForReport(reportID)
    if err != nil {
        return nil, err
    }

    return findings, nil
}

func (s *FindingService) DeleteFinding(findingID int) error {
    return s.FindingRepository.DeleteFinding(findingID)
}

func (s *FindingService) EditFinding(findingID int, finding *models.Finding) error {
    return s.FindingRepository.EditFinding(findingID, finding)
}

func (s *FindingService) FilterFindings(name, status, severity, id, author string) ([]models.Finding, error) {
    return s.FindingRepository.FilterFindings(name, status, severity, id, author)
}