"use strict";

var KTSigninGeneral = function () {
    var t, e, r;

    return {
        init: function () {
            t = document.querySelector("#kt_sign_in_form"),
                e = document.querySelector("#kt_sign_in_submit"),
                r = FormValidation.formValidation(t, {
                    fields: {
                        username: {
                            validators: {
                                notEmpty: {
                                    message: "Username address is required"
                                }
                            }
                        },
                        password: {
                            validators: {
                                notEmpty: {
                                    message: "The password is required"
                                }
                            }
                        }
                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger,
                        bootstrap: new FormValidation.plugins.Bootstrap5({
                            rowSelector: ".fv-row",
                            eleInvalidClass: "",
                            eleValidClass: ""
                        })
                    }
                });

            (e.closest("form").getAttribute("action")) ? e.addEventListener("click", (function (i) {
                i.preventDefault();
                r.validate().then((function (r) {
                    if ("Valid" == r) {
                        e.setAttribute("data-kt-indicator", "on");
                        e.disabled = !0;
                        axios.post("/api/v1/login", {
                            username: t.querySelector('[name="username"]').value,
                            password: t.querySelector('[name="password"]').value
                        }, {
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then((function (response) {
                            if (response.status === 200) {
                                localStorage.setItem('token', response.data.access_token);
                                t.reset();
                                Swal.fire({
                                    text: "You have successfully logged in!",
                                    icon: "success",
                                    buttonsStyling: !1,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                });
                                const redirectUrl = t.getAttribute("data-kt-redirect-url");
                                redirectUrl && (location.href = redirectUrl);
                            } else {
                                Swal.fire({
                                    text: "Sorry, the username or password is incorrect, please try again.",
                                    icon: "error",
                                    buttonsStyling: !1,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                });
                            }
                        })).catch((function (error) {
                            Swal.fire({
                                text: "Sorry, the username or password is incorrect, please try again.",
                                icon: "error",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            });
                        })).then((function () {
                            e.removeAttribute("data-kt-indicator");
                            e.disabled = !1;
                        }));
                    } else {
                        Swal.fire({
                            text: "Sorry, looks like there are some errors detected, please try again.",
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        });
                    }
                }))
            })) : e.addEventListener("click", (function (i) {
                i.preventDefault();
                r.validate().then((function (r) {
                    if ("Valid" == r) {
                        e.setAttribute("data-kt-indicator", "on");
                        e.disabled = !0;
                        axios.post("/api/v1/login", {
                            username: t.querySelector('[name="username"]').value,
                            password: t.querySelector('[name="password"]').value
                        }, {
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then((function (response) {
                            if (response.status === 200) {
                                localStorage.setItem('token', response.data.access_token);
                                t.reset();
                                Swal.fire({
                                    text: "You have successfully logged in!",
                                    icon: "success",
                                    buttonsStyling: !1,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                });
                                const redirectUrl = t.getAttribute("data-kt-redirect-url");
                                redirectUrl && (location.href = redirectUrl);
                            } else {
                                Swal.fire({
                                    text: "Sorry, the username or password is incorrect, please try again.",
                                    icon: "error",
                                    buttonsStyling: !1,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                });
                            }
                        })).catch((function (error) {
                            Swal.fire({
                                text: "Sorry, looks like there are some errors detected, please try again.",
                                icon: "error",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            });
                        })).then((function () {
                            e.removeAttribute("data-kt-indicator");
                            e.disabled = !1;
                        }));
                    } else {
                        Swal.fire({
                            text: "Sorry, looks like there are some errors detected, please try again.",
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        });
                    }
                }))
            }))
        }
    }
}();

KTUtil.onDOMContentLoaded((function () {
    KTSigninGeneral.init()
}));
