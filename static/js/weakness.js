async function list_weaknesses() {
    fetch("/api/v1/weaknesses", {
        method: "GET",
        mode: 'cors',
        headers: {
            "Content-type": "application/json",
            "Authorization": "Bearer " + localStorage.getItem("token")
        }
    }).then(async (response) => {
        // get json response here
        let data = await response.json();
        if (response.status == 200) {
            var table = $("#kt_table_list_weakness").DataTable();
            table.clear(); // Clear existing rows

            for (let r of data) {
                table.row.add([
                    `<a href="`+ r['link'] +`" target="_blank">` + r['external_id'] + `</a>`,
                    r['weakness_type'],
                    r['description'],
                    `
                    <div class="text-end">
                        <a href="#" class="btn btn-light btn-active-light-primary btn-flex btn-center btn-sm" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">Actions 
							<i class="ki-duotone ki-down fs-5 ms-1"></i>
                        </a>
                        <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true">
							<!--begin::Menu item-->
							<div class="menu-item px-3">
								<a data-id="`+ r['id'] +`" onclick="EditWeakness(this.dataset.id)" class="menu-link px-3">Edit</a>
							</div>
							<!--end::Menu item-->
							<!--begin::Menu item-->
							<div class="menu-item px-3">
								<a data-id="`+ r['id'] +`" onclick="DeleteWeakness(this.dataset.id)" class="menu-link px-3">Delete</a>
							</div>
							<!--end::Menu item-->
						</div>
                    </div>
                    `
                ]).draw(false);
            }
        } else {
            window.location.replace("/login");
        }
    });
};

    
list_weaknesses();


function addfWeakness(btn) {
    External_ID = document.getElementById('External_ID').value;
    Weakness_Type = document.getElementById('Weakness_Type').value;
    Weakness_Description = document.getElementById('Weakness_Description').value;
    Weakness_Link = document.getElementById('Weakness_Link').value;

    fetch("/api/v1/weakness", {
        method: "POST",
        mode: 'cors',
        body: JSON.stringify({
            "external_id": External_ID,
            "weakness_type": Weakness_Type,
            "description": Weakness_Description,
            "link": Weakness_Link
        }),
        headers: {
          "Content-type": "application/json",
          "Authorization": "Bearer " + localStorage.getItem("token")
        }
      }).then(async (response) => {
        // Lấy phản hồi dạng JSON
        let data = await response.json();
        if (response.status === 201) {
            window.location.reload(true);
        } else if (response.status === 401) {
          // Nếu phản hồi là 401, chuyển hướng đến trang đăng nhập
          window.location.replace("/login");
        }
      }).catch((error) => {
        // Xử lý lỗi nếu có
        console.error("Error:", error);
      });
}


function DeleteWeakness(weaknessid) {
    fetch("/api/v1/weakness/" + weaknessid, {
        method: "DELETE",
        mode: 'cors',
        headers: {
            "Content-type": "application/json",
            "Authorization": "Bearer " + localStorage.getItem("token")
        }
    }).then(async (response) => {
        // get json response here
        let data = await response.json();
        if (response.status == 200) {
            window.location.reload(true);
        } else {
            window.location.replace("/login");
        }
    });
}


function EditWeakness(userid) {
    $('#kt_modal_view_user').modal('show');
    fetch("/api/v1/user/" + userid + "/change-password", {
        method: "POST",
        mode: 'cors',
        headers: {
            "Content-type": "application/json",
            "Authorization": "Bearer " + localStorage.getItem("token")
        }
    }).then(async (response) => {
        // get json response here
        let data = await response.json();
        if (response.status == 200) {
            document.getElementById('viewfindingname').value = data[0]['name'];
            document.getElementById('viewfindingWeakness').value = data[0]['weakness'];
            document.getElementById('viewfindingStatus').value = data[0]['status'];
            document.getElementById('viewfindingSeverity').value = data[0]['severity'];
            document.getElementById('viewfindingDescription').value  = data[0]['description'];
            document.getElementById('viewfindingImpact').value  = data[0]['impact'];
            document.getElementById('viewfindingUrl').value  = data[0]['link'];
            document.getElementById('viewfindingRecommended').value  = data[0]['recommend'];
            // Chèn ảnh
            const viewPocDiv = document.getElementById('viewpoc');
            viewPocDiv.innerHTML = ''; // Xóa nội dung cũ

            // Ưu tiên sử dụng image_urls nếu có
            const imageUrls = data[0]['image_urls'] || (data[0]['image_url'] ? data[0]['image_url'].split(',') : []);

            imageUrls.forEach(imageUrl => {
                const fullImageUrl = "http://127.0.0.1:8088" + imageUrl; // Tạo đường dẫn đầy đủ
            
                const img = new Image(); 
            
                img.onload = function() {
                    img.alt = 'poc';
                    viewPocDiv.appendChild(img);
                };
            
                img.onerror = function() {
                    console.error("Không thể tải ảnh:", fullImageUrl); // In ra đường dẫn đầy đủ để debug
                    // (Tùy chọn) Hiển thị ảnh lỗi mặc định
                };
            
                img.src = fullImageUrl; 
            });
        } else {
            window.location.replace("/login");
        }
    });
}